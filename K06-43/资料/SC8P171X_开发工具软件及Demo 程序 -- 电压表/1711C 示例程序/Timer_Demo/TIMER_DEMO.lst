---- E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c ----------------------------------------------------------------------
1:                #include <SC.h>
2:                
3:                void main(void)
4:                {
  002A    0000    NOP
  002B    0064    CLRWDT
5:                	asm("nop");
6:                	asm("clrwdt");
7:                	OSCCON = 0X71;				//8M
  002C    3071    LDIA	0x71
  002D    1683    SETB	0x3,5
  002E    1303    CLRB	0x3,6
  002F    008F    LD	0xF,A
8:                	
9:                	TRISB = 0;					//PORTB口作输出口
  0030    0186    CLR	0x6
10:               	
11:               	OPTION_REG = 0B11010000;	//Timer0使用内部时钟，预分频为1:2
  0031    30D0    LDIA	0xD0
  0032    0081    LD	0x1,A
12:               	
13:               	TMR0 = 6;					//设定Timer初始值
  0033    3006    LDIA	0x6
  0034    1283    CLRB	0x3,5
  0035    1303    CLRB	0x3,6
  0036    0081    LD	0x1,A
14:               	T0IF = 0;
  0037    110B    CLRB	0xB,2
15:               	T0IE = 1;					//使能Timer0溢出中断
  0038    168B    SETB	0xB,5
16:               	
17:               	GIE = 1;					//开启总中断
  0039    178B    SETB	0xB,7
  003A    283B    JP	0x3B
18:               	
19:               	while(1)
  003B    0064    CLRWDT
  003C    283B    JP	0x3B
  003D    283B    JP	0x3B
  003E    2810    JP	0x10
20:               	{
21:               		asm("clrwdt");
22:               	}
23:               }
24:               
25:               void interrupt Timer0_Isr(void)
26:               {
27:               	if(T0IF)
  0011    1D0B    SNZB	0xB,2
  0012    2814    JP	0x14
  0013    2815    JP	0x15
  0014    281F    JP	0x1F
28:               	{
29:               		TMR0 += 6;
  0015    3006    LDIA	0x6
  0016    00F0    LD	0x70,A
  0017    0870    LD	A,0x70
  0018    0781    ADDR	0x1
30:               		T0IF = 0;
  0019    110B    CLRB	0xB,2
31:               		
32:               		PORTB ^= 0XFF;
  001A    30FF    LDIA	0xFF
  001B    00F0    LD	0x70,A
  001C    0870    LD	A,0x70
  001D    0686    XORR	0x6
  001E    281F    JP	0x1F
  001F    0874    LD	A,0x74
  0020    00FF    LD	0x7F,A
  0021    0873    LD	A,0x73
  0022    008A    LD	0xA,A
  0023    0872    LD	A,0x72
  0024    0084    LD	0x4,A
  0025    0E71    SWAPA	0x71
  0026    0083    LD	0x3,A
  0027    0EFE    SWAPR	0x7E
  0028    0E7E    SWAPA	0x7E
  0029    0009    RETI
33:               	}
34:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    2810    JP	0x10
  0010    283F    JP	0x3F
---- start_initialization ------------------------------------------------------------------
  003F    0183    CLR	0x3
  0040    282A    JP	0x2A
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F1    LD	0x71,A
  0007    0804    LD	A,0x4
  0008    00F2    LD	0x72,A
  0009    080A    LD	A,0xA
  000A    00F3    LD	0x73,A
  000B    1283    CLRB	0x3,5
  000C    1303    CLRB	0x3,6
  000D    087F    LD	A,0x7F
  000E    00F4    LD	0x74,A
  000F    2811    JP	0x11
---- common_function ------------------------------------------------------------------
