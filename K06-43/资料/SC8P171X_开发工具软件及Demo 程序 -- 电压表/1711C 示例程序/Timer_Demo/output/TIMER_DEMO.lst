

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Oct 18 08:53:00 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	SC8P1713
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	FNCALL	intlevel1,_Timer0_Isr
    44                           	global	intlevel1
    45                           	FNROOT	intlevel1
    46                           	global	_PORTB
    47                           psect	maintext,global,class=CODE,delta=2
    48                           global __pmaintext
    49  002A                     __pmaintext:
    50  0006                     _PORTB	set	6
    51                           	global	_TMR0
    52  0001                     _TMR0	set	1
    53                           	global	_GIE
    54  005F                     _GIE	set	95
    55                           	global	_T0IE
    56  005D                     _T0IE	set	93
    57                           	global	_T0IF
    58  005A                     _T0IF	set	90
    59                           	global	_OPTION_REG
    60  0081                     _OPTION_REG	set	129
    61                           	global	_OSCCON
    62  008F                     _OSCCON	set	143
    63                           	global	_TRISB
    64  0086                     _TRISB	set	134
    65                           	file	"TIMER_DEMO.as"
    66                           	line	#
    67                           psect cinit,class=CODE,delta=2
    68                           global start_initialization
    69  003F                     start_initialization:
    70                           
    71                           psect cinit,class=CODE,delta=2
    72                           global end_of_initialization
    73                           
    74                           ;End of C runtime variable initialization code
    75                           
    76  003F                     end_of_initialization:
    77  003F  0183               clrf status
    78  0040  282A               ljmp _main	;jump to C main() function
    79                           psect	cstackCOMMON,class=COMMON,space=1
    80                           global __pcstackCOMMON
    81  0070                     __pcstackCOMMON:
    82                           	global	?_main
    83  0070                     ?_main:	; 0 bytes @ 0x0
    84                           	global	?_Timer0_Isr
    85  0070                     ?_Timer0_Isr:	; 0 bytes @ 0x0
    86                           	global	??_Timer0_Isr
    87  0070                     ??_Timer0_Isr:	; 0 bytes @ 0x0
    88  0070                     	ds	5
    89                           	global	??_main
    90  0075                     ??_main:	; 0 bytes @ 0x5
    91 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    92 ;;Auto spaces:   Size  Autos    Used
    93 ;; COMMON          14      5       5
    94 ;; BANK0           80      0       0
    95 ;; BANK1           80      0       0
    96                           
    97 ;;
    98 ;; Pointer list with targets:
    99                           
   100                           
   101                           
   102 ;;
   103 ;; Critical Paths under _main in COMMON
   104 ;;
   105 ;;   None.
   106 ;;
   107 ;; Critical Paths under _Timer0_Isr in COMMON
   108 ;;
   109 ;;   None.
   110 ;;
   111 ;; Critical Paths under _main in BANK0
   112 ;;
   113 ;;   None.
   114 ;;
   115 ;; Critical Paths under _Timer0_Isr in BANK0
   116 ;;
   117 ;;   None.
   118 ;;
   119 ;; Critical Paths under _main in BANK1
   120 ;;
   121 ;;   None.
   122 ;;
   123 ;; Critical Paths under _Timer0_Isr in BANK1
   124 ;;
   125 ;;   None.
   126                           
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   129 ;;
   130                           
   131 ;;
   132 ;;Call Graph Tables:
   133 ;;
   134 ;; ---------------------------------------------------------------------------------
   135 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   136 ;; ---------------------------------------------------------------------------------
   137 ;; (0) _main                                                 0     0      0       0
   138 ;; ---------------------------------------------------------------------------------
   139 ;; Estimated maximum stack depth 0
   140 ;; ---------------------------------------------------------------------------------
   141 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   142 ;; ---------------------------------------------------------------------------------
   143 ;; (1) _Timer0_Isr                                           5     5      0       0
   144 ;;                                              0 COMMON     5     5      0
   145 ;; ---------------------------------------------------------------------------------
   146 ;; Estimated maximum stack depth 1
   147 ;; ---------------------------------------------------------------------------------
   148                           
   149 ;; Call Graph Graphs:
   150                           
   151 ;; _main (ROOT)
   152 ;;
   153 ;; _Timer0_Isr (ROOT)
   154 ;;
   155                           
   156 ;; Address spaces:
   157                           
   158 ;;Name               Size   Autos  Total    Cost      Usage
   159 ;;BITCOMMON            E      0       0       0        0.0%
   160 ;;NULL                 0      0       0       0        0.0%
   161 ;;CODE                 0      0       0       0        0.0%
   162 ;;COMMON               E      5       5       1       35.7%
   163 ;;BITSFR0              0      0       0       1        0.0%
   164 ;;SFR0                 0      0       0       1        0.0%
   165 ;;BITSFR1              0      0       0       2        0.0%
   166 ;;SFR1                 0      0       0       2        0.0%
   167 ;;STACK                0      0       0       2        0.0%
   168 ;;ABS                  0      0       0       3        0.0%
   169 ;;BITBANK0            50      0       0       4        0.0%
   170 ;;BITSFR3              0      0       0       4        0.0%
   171 ;;SFR3                 0      0       0       4        0.0%
   172 ;;BANK0               50      0       0       5        0.0%
   173 ;;BITSFR2              0      0       0       5        0.0%
   174 ;;SFR2                 0      0       0       5        0.0%
   175 ;;BITBANK1            50      0       0       6        0.0%
   176 ;;BANK1               50      0       0       7        0.0%
   177 ;;DATA                 0      0       0       8        0.0%
   178                           
   179                           	global	_main
   180                           psect	maintext
   181                           
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 4 in file "E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;		None               void
   191 ;; Registers used:
   192 ;;		wreg, status,2
   193 ;; Tracked objects:
   194 ;;		On entry : 17F/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMMON   BANK0   BANK1
   198 ;;      Params:         0       0       0
   199 ;;      Locals:         0       0       0
   200 ;;      Temps:          0       0       0
   201 ;;      Totals:         0       0       0
   202 ;;Total ram usage:        0 bytes
   203 ;; Hardware stack levels required when called:    1
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           psect	maintext
   211                           	file	"E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c"
   212                           	line	4
   213                           	global	__size_of_main
   214  0015                     	__size_of_main	equ	__end_of_main-_main
   215                           	
   216  002A                     _main:	
   217                           	opt	stack 7
   218                           ; Regs used in _main: [wreg+status,2]
   219                           	line	5
   220                           	
   221  002A                     l915:	
   222                           # 5 "E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c"
   223  002A  0000               nop ;#
   224                           	line	6
   225                           # 6 "E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c"
   226  002B  0064               clrwdt ;#
   227                           psect	maintext
   228                           	line	7
   229                           	
   230  002C                     l917:	
   231                           ;Timer0.c: 7: OSCCON = 0X71;
   232  002C  3071               	movlw	(071h)
   233  002D  1683               	bsf	status, 5	;RP0=1, select bank1
   234  002E  1303               	bcf	status, 6	;RP1=0, select bank1
   235  002F  008F               	movwf	(143)^080h	;volatile
   236                           	line	9
   237                           	
   238  0030                     l919:	
   239                           ;Timer0.c: 9: TRISB = 0;
   240  0030  0186               	clrf	(134)^080h	;volatile
   241                           	line	11
   242                           	
   243  0031                     l921:	
   244                           ;Timer0.c: 11: OPTION_REG = 0B11010000;
   245  0031  30D0               	movlw	(0D0h)
   246  0032  0081               	movwf	(129)^080h	;volatile
   247                           	line	13
   248                           	
   249  0033                     l923:	
   250                           ;Timer0.c: 13: TMR0 = 6;
   251  0033  3006               	movlw	(06h)
   252  0034  1283               	bcf	status, 5	;RP0=0, select bank0
   253  0035  1303               	bcf	status, 6	;RP1=0, select bank0
   254  0036  0081               	movwf	(1)	;volatile
   255                           	line	14
   256                           	
   257  0037                     l925:	
   258                           ;Timer0.c: 14: T0IF = 0;
   259  0037  110B               	bcf	(90/8),(90)&7
   260                           	line	15
   261                           	
   262  0038                     l927:	
   263                           ;Timer0.c: 15: T0IE = 1;
   264  0038  168B               	bsf	(93/8),(93)&7
   265                           	line	17
   266                           	
   267  0039                     l929:	
   268                           ;Timer0.c: 17: GIE = 1;
   269  0039  178B               	bsf	(95/8),(95)&7
   270  003A  283B               	goto	l931
   271                           	line	19
   272                           ;Timer0.c: 19: while(1)
   273                           	
   274  003B                     l539:	
   275                           	line	21
   276                           	
   277  003B                     l931:	
   278                           # 21 "E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c"
   279  003B  0064               clrwdt ;#
   280                           psect	maintext
   281  003C  283B               	goto	l931
   282                           	line	22
   283                           	
   284  003D                     l540:	
   285                           	line	19
   286  003D  283B               	goto	l931
   287                           	
   288  003E                     l541:	
   289                           	line	23
   290                           	
   291  003E                     l542:	
   292                           	global	start
   293  003E  2810               	ljmp	start
   294                           	opt stack 0
   295                           GLOBAL	__end_of_main
   296  003F                     	__end_of_main:
   297 ;; =============== function _main ends ============
   298                           
   299                           	signat	_main,88
   300                           	global	_Timer0_Isr
   301                           psect	text55,local,class=CODE,delta=2
   302                           global __ptext55
   303  0011                     __ptext55:
   304                           
   305 ;; *************** function _Timer0_Isr *****************
   306 ;; Defined at:
   307 ;;		line 26 in file "E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;		None               void
   314 ;; Registers used:
   315 ;;		wreg, status,2, status,0
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1
   321 ;;      Params:         0       0       0
   322 ;;      Locals:         0       0       0
   323 ;;      Temps:          5       0       0
   324 ;;      Totals:         5       0       0
   325 ;;Total ram usage:        5 bytes
   326 ;; Hardware stack levels used:    1
   327 ;; This function calls:
   328 ;;		Nothing
   329 ;; This function is called by:
   330 ;;		Interrupt level 1
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           psect	text55
   334                           	file	"E:\中微资料\公司资料\程序和推广资料\89示例程序\示例程序\Timer_Demo\Timer0.c"
   335                           	line	26
   336                           	global	__size_of_Timer0_Isr
   337  0019                     	__size_of_Timer0_Isr	equ	__end_of_Timer0_Isr-_Timer0_Isr
   338                           	
   339  0011                     _Timer0_Isr:	
   340                           	opt	stack 7
   341                           ; Regs used in _Timer0_Isr: [wreg+status,2+status,0]
   342                           psect	intentry,class=CODE,delta=2
   343                           global __pintentry
   344  0004                     __pintentry:
   345                           global interrupt_function
   346  0004                     interrupt_function:
   347                           	global saved_w
   348  007E                     	saved_w	set	btemp+0
   349  0004  00FE               	movwf	saved_w
   350  0005  0E03               	swapf	status,w
   351  0006  00F1               	movwf	(??_Timer0_Isr+1)
   352  0007  0804               	movf	fsr0,w
   353  0008  00F2               	movwf	(??_Timer0_Isr+2)
   354  0009  080A               	movf	pclath,w
   355  000A  00F3               	movwf	(??_Timer0_Isr+3)
   356  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   357  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   358  000D  087F               	movf	btemp+1,w
   359  000E  00F4               	movwf	(??_Timer0_Isr+4)
   360  000F  2811               	ljmp	_Timer0_Isr
   361                           psect	text55
   362                           	line	27
   363                           	
   364  0011                     i1l933:	
   365                           ;Timer0.c: 27: if(T0IF)
   366  0011  1D0B               	btfss	(90/8),(90)&7
   367  0012  2814               	goto	u1_21
   368  0013  2815               	goto	u1_20
   369  0014                     u1_21:
   370  0014  281F               	goto	i1l546
   371  0015                     u1_20:
   372                           	line	29
   373                           	
   374  0015                     i1l935:	
   375                           ;Timer0.c: 28: {
   376                           ;Timer0.c: 29: TMR0 += 6;
   377  0015  3006               	movlw	(06h)
   378  0016  00F0               	movwf	(??_Timer0_Isr+0)+0
   379  0017  0870               	movf	(??_Timer0_Isr+0)+0,w
   380  0018  0781               	addwf	(1),f	;volatile
   381                           	line	30
   382                           	
   383  0019                     i1l937:	
   384                           ;Timer0.c: 30: T0IF = 0;
   385  0019  110B               	bcf	(90/8),(90)&7
   386                           	line	32
   387                           ;Timer0.c: 32: PORTB ^= 0XFF;
   388  001A  30FF               	movlw	(0FFh)
   389  001B  00F0               	movwf	(??_Timer0_Isr+0)+0
   390  001C  0870               	movf	(??_Timer0_Isr+0)+0,w
   391  001D  0686               	xorwf	(6),f	;volatile
   392  001E  281F               	goto	i1l546
   393                           	line	33
   394                           	
   395  001F                     i1l545:	
   396                           	line	34
   397                           	
   398  001F                     i1l546:	
   399  001F  0874               	movf	(??_Timer0_Isr+4),w
   400  0020  00FF               	movwf	btemp+1
   401  0021  0873               	movf	(??_Timer0_Isr+3),w
   402  0022  008A               	movwf	pclath
   403  0023  0872               	movf	(??_Timer0_Isr+2),w
   404  0024  0084               	movwf	fsr0
   405  0025  0E71               	swapf	(??_Timer0_Isr+1)^0FFFFFF80h,w
   406  0026  0083               	movwf	status
   407  0027  0EFE               	swapf	saved_w,f
   408  0028  0E7E               	swapf	saved_w,w
   409  0029  0009               	retfie
   410                           	opt stack 0
   411                           GLOBAL	__end_of_Timer0_Isr
   412  002A                     	__end_of_Timer0_Isr:
   413 ;; =============== function _Timer0_Isr ends ============
   414                           
   415                           	signat	_Timer0_Isr,88
   416                           psect	text56,local,class=CODE,delta=2
   417                           global __ptext56
   418  0000                     __ptext56:
   419                           	global	btemp
   420  007E                     	btemp set 07Eh
   421                           
   422                           	DABS	1,126,2	;btemp
   423                           	global	wtemp0
   424  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Oct 18 08:53:00 2017

                 l540 003D                   l541 003E                   l542 003E                   l539 003B  
                 l921 0031                   l931 003B                   l923 0033                   l915 002A  
                 l925 0037                   l917 002C                   l927 0038                   l919 0030  
                 l929 0039                   _GIE 005F                   fsr0 0004                  _T0IE 005D  
                _T0IF 005A                  _TMR0 0001                  u1_20 0015                  u1_21 0014  
                _main 002A                  btemp 007E                  start 0010                 ?_main 0070  
               i1l545 001F                 i1l546 001F                 i1l933 0011                 i1l935 0015  
               i1l937 0019                 _PORTB 0006                 _TRISB 0086                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_main 003F                ??_main 0075  
              _OSCCON 008F            _Timer0_Isr 0011                saved_w 007E        __pcstackCOMMON 0070  
         ?_Timer0_Isr 0070            __pmaintext 002A            __pintentry 0004   __size_of_Timer0_Isr 0019  
end_of_initialization 003F   start_initialization 003F          ??_Timer0_Isr 0070    __end_of_Timer0_Isr 002A  
   interrupt_function 0004              __ptext55 0011              __ptext56 0000         __size_of_main 0015  
            intlevel1 0000            _OPTION_REG 0081  
